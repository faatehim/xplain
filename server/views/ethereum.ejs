<!DOCTYPE html>
<html lang="en" dir="ltr">

      <head>
  
            <!-- Global site tag (gtag.js) - Google Analytics -->
            <script async src="https://www.googletagmanager.com/gtag/js?id=UA-109509226-1"></script>
            <script>
                  window.dataLayer = window.dataLayer || [];
                  function gtag(){dataLayer.push(arguments);}
                  gtag('js', new Date());
                  gtag('config', 'UA-109509226-1');
            </script>

            <script async defer src="https://buttons.github.io/buttons.js"></script>

            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <meta http-equiv="x-ua-compatible" content="ie=edge">
            <title>Explain Me Please - Ethereum</title>
            <meta name="description" content="Ethereum Explained For Your Level">
            <meta property="og:title" content="Explain Me Please - Ethereum">
            <meta property="og:description" content="Ethereum Explained For Your Level">
            <link rel="stylesheet" href="https://unpkg.com/wingcss"/>
            <link href="css/styles.css" rel="stylesheet">
            <link href="https://fonts.googleapis.com/css?family=Lora" rel="stylesheet">

      </head>


      <body>

            <div id="fb-root"></div>
                  <script>(function(d, s, id) {
                        var js, fjs = d.getElementsByTagName(s)[0];
                        if (d.getElementById(id)) return;
                        js = d.createElement(s); js.id = id;
                        js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.11&appId=161243984474929';
                        fjs.parentNode.insertBefore(js, fjs);
                      }(document, 'script', 'facebook-jssdk'));
                  </script>

            <div class="nav horizontal-align content center">
                  <div class="nav-item">
                        <h6> <a href="/"> <b> Explain Me Please </b> </a> </h6>
                  </div>

                  <div class="nav-item">
                        <h6> <a href="/about"> <b> About </b> </a>  </h6>
                  </div>

                  <div class="nav-item">
                        <div id="the-basics" class="sbox">
                              <input class="typeahead" type="text" placeholder="I want to learn about..."
                              onkeydown="getSearchResult(this)">
                        </div>
                  </div>
            </div>

            <h2 class="page-header text-center"> <b>  Ethereum Explained </b> </h2>
             

            <div class="nav content horizontal-align center">

                    <a href="#" class="nav-item" onclick="showContent('#X4')"> |7 Year Old|</a>
                    <a href="#" class="nav-item" onclick="showContent('#X1')"> |Average Joe|</a>
                    <a href="#" class="nav-item" onclick="showContent('#X3')"> |Nerd|</a>
                    <a href="#" class="nav-item" onclick="showContent('#X2')"> |Video Lover|</a>
                    <a href="#" class="nav-item" onclick="showContent('#X6')"> |Podcast Lover|</a>
                    <a href="#" class="nav-item" onclick="showContent('#X5')"> |Investor| </a>
                    <a href="#" class="nav-item" onclick="showContent('#X7')"> |FAQ|</a>
            </div>
        
            <div class="row">

                  <div class="col"></div>
   
                  <div class="col">
  

                        <div id="X1" class="content text-center">
                              <h3> Ethereum For The Average Joe</h3>

                              <p> Ethereum is a decentralized application and smart contract platform on the blockchain. Before we dive into what all of that means, you must understand what a blockchain is.</p>

                              <h5> Blockchain Explanation </h5>

                              <p> <a href="/resources?q=Bitcoin" target="blank" rel="noopener"> * knowledge about bitcoin would be useful*</a> </p>

                              <p> A blockchain is a distributed, immutable, public ledger. </p>

                              <p> Distributed meaning there is no master copy by one person. They are many synchronized versions of the blockchain on nodes(computers) all around the world. </p>

                              <p> Immutable meaning that once a transaction is present in the blockchain for an hour or two, altering or erasing it becomes impossible. This is because it requires a lot of computational power to undo the transaction. </p>

                              <p> A ledger is simply a list of transaction in a blockchain. </p>

                              <p> To understand how several people are able to keep their copies of the database in sync with everyone else, imagine there are 100 nodes in a network. Everyone is sitting with an empty file folder and an empty page in front of them. Whenever anyone does something important in the network, like transferring money, they announce it to everyone in the network.

                              <p> Everyone makes a note of the announcement on their pages until the page is filled. When it is filled, the person who filled it has to seal the contents of their page by solving a mathematical puzzle. The first person who solves the mathematical puzzle gets the right to copy their version of the notes and send them to everybody elses folders as the official version. However, everyone is obliged to decline someone elses version if they find mistakes in it. Solving the puzzle can not ensure everybody took the same notes in same order. Only the fastest solver gets to decide which notes are to be included on the page and which have to wait further. They are still unable to forge the notes, because everybody can check after them. </p>

                              <p> Once the page is sealed, the page is added to the file folder, everybody brings out a new page and the process cycles infinitely. As time passes, these pages (blocks) that contain important records are added to the folder thus forming the database.</p>

                              <h5> Uses of Blockchain </h5>

                              <p> Bitcoin uses the blockchain to store records of financial transactions, acting like a bank to guarantee security and trust. However, Bitcoin does not allow for business logic and people started to realized Bitcoin was restrictive in programming money and building applications onto the blockchain. Building basic applications like a crowdfunding app with no central authority required months of work even for seasoned programmers. There needed to be a better solution. </p>

                              <h5> How does Ethereum work </h5>

                              <p> Just like any other blockchain, Ethereum requires many nodes running a software on their computer to guarantee security and trust. Every node participating in the Ethereum protocol runs a software on their computer called the Ethereum Virtual Machine(EVM). The EVM is a system which understands and executes all the software written in a specific Ethereum programming language - Solidity (similar to Javascript) and Serpent (similar to Python). The applications or software run by the EVM are called "smart contracts". </p>

                              <p> This is what makes Ethereum a world computer, but an expensive and slow one. It has about the same processing power as a 90's smartphone. You may be asking, if that is true, why would anyone use Ethereum? Well, we will talk about that. </p>

                              <p> To run any smart contract, you must pay a price so no unlimited loops can be run which crashes the system and suck all the resources. You must pay this price in Ethers, the native cryptocurrency to Ethereum. Ether is to Ethereum as Bitcoin(currency) is to Bitcoin(system). We will talk about this in more detail later.  </p>

                              <p> In Ethereum, they are 2 types of accounts or users. </p>

                              <p> 1. Externally Owned Accounts => accounts owned by some external entity (say a person or company), can send and receive Ether's. </p>

                              <p> 2. Contract Accounts => smart contracts, can send and receive Ethers just like externally owner accounts but can also run a predefined computer program to perform various actions when triggered. </p>

                              <h5> Example </h5>

                              <p> Let's say Mike and Annie want to place a bet on a soccer game. Mike is a huge fan of the team Real Madrid and Annie is an ardent supporter of FC Barcelona(rivals). There is a Real Madrid vs FC Barcelona game coming up in a few days. They agree to a bet with the conditions that the losing team's fan will have to pay the other $500. They are many ways to go about this, with each having its unique pros and cons </p>

                              <p> 1. Trusting each other <br> This could work as both Mike and Annie are friends and the amount they are betting is not too much. However what if they were strangers who did not trust each other? What if this was a large amount of money and they did not want any cheating happening? </p>

                              <p> 2. Get help from a friend they both knew and trusted <br> This could work as they would both give their $500 to their friend, let's call him Johnny. After the match had ended, Johnny could check the score and give the $1000 to the winner. However, this method has similar shortcomings to the first method of both Mike and Annie trusting each other. If they were strangers, how would this work? Is there another cheap and easy way which guarantees the winner will get $1000 after the match? </p> 

                              <p> 3. Signing a Legal Agreement <br> Sure they could go to court and both sign an agreement that defines all the terms of the bet and the consequence for the loser. However, this process would be incredibly time consuming and expensive. It would not be worth it to go through this hassle. </p>


                              <p> Creating a smart contract on the Ethereum blockchain could help save Annie and Mike's day in this case. They could write code that accepts $500 from both of their Ethereum accounts, and then the next day uses an API to check the match score and transfer the Ether worth of $1000 to the winner. Win-win situation. A smart contract is immutable because it is in the blockchain. No one can do any editing or altering. </p>

                              <h5> How does this work on the blockchain? </h5>

                              <p> Well when a smart contract is executed, all the information and conditions present in the smart contract are recorded onto a transaction which (hopefully) eventually makes it on to a block and onto the blockchain. </p>

                              <p> They are 3 main kinds of transactions you can find on the Ethereum blockchain. </p>

                              <p> 1. Transfer of Ether from one account to another account <br> These are Bitcoin-like transactions. An example would be sending 1 Ether to your landlord for your rent payment. At a high level, this transaction contains: a timestamp, your ether address which has your funds in it, your landlord's address, and the amount you want to send.</p>

                              <p> 2. Transfer of ether from a user to no one <br> These transactions are used to create a smart contract. Let's say Annie and Mike are smart and decided to create a smart contract with the conditions of the bet. The transaction will contain a timestamp and the sender's ether account. However, there will be 2 major difference between this contact creating transaction and the transaction to your landlord. First of all, this transaction will have no recipient. The second difference is that this transaction has a special "data field". This "data field" is what makes Ethereum different from other digital currencies. This data field is used to record the creation and execution of smart contracts. So, this data field will contain the code that lists the conditions and consequences of the bet. </p>

                              <p> 3. Transfers of ether from externally owned account to a smart contact <br> Whenever an account wants to execute a smart contract, they must make a transaction to the smart contract and put the instructions for the execution in the data field so the contract can know what to trigger. </p>

                              <p> Whenever any of the above 3 transactions happen, the whole network writes in down in their folder. However, additionally, each node will execute the smart contract code in their EVM. </p>


                              <h5> Smart Contract Price? </h5>

                              <p> Every smart contract must pay a certain price for the EVM to execute it. This price is paid to the node that spent its memory, storage, computation, and electricity to execute and verify the smart contract. </p>

                              <p> To calculate the prices of smart contracts, every statement has an assigned cost to it. This cost is paid and defined in Gas. Eventually, gas is converted to ether using an exchange rate. Whenever you execute a smart contract, you have to define the maximum Gas to be consumed. The execution will stop either when the execution is completed or when the gas limit is reached. This is done to avoid infinite loops in smart contracts, preventing the program getting stuck executing a set of transactions and eventually crashing. </p>

                              <p> The concept of Gas solves the problem of infinite loops. It doesn't make sense for a node to crash and be stuck executing for infinity. </p>

                              <h5> Conclusion </h5>

                              <p> That is Ethereum. It allows for the first time in history, money to be programmable. Places where they are traditionally multiple third parties which make the process slow are now not necessary. With Ethereum, a piece of code could automatically transfer the home ownership to the buyer and the funds to the seller after a deal is agreed upon without needing a third party to execute on their behalf. </p>


                              <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                              <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                              <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>



                        </div><!-- /.panel-->

                        <div id="X2" class="hidden">
                              <div class="content text-center">
                                    <h3> Ethereum For a Video Lover</h3>
                                   <iframe width="560" height="315" src="https://www.youtube.com/embed/WSN5BaCzsbo" allowfullscreen></iframe>
                                   <iframe width="560" height="315" src="https://www.youtube.com/embed/w9WLo33KfCY" allowfullscreen></iframe>
                                   <iframe width="560" height="315" src="https://www.youtube.com/embed/TDGq4aeevgY" allowfullscreen></iframe>
                              </div>


                              <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                              <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                              <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>

                        </div><!-- /.panel-->

                        <div id="X3" class="hidden">
                              <div class="content text-center">
                                    <h3> Ethereum For a Nerd </h3> 

                                    <p> This list of resources was taken from a <a href="https://docs.google.com/document/d/1ejYCWkHQIRInXB4VifoHevom8CWVJ69zFVfP4J2fjSU/edit#" target="blank" rel="noopener"> Google Doc </a> released by the <a href="https://blockchain.berkeley.edu/" target="blank" rel="noopener"> Blockchain at Berkeley </a> organization </p>

                                    <h5>Design:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://github.com/ethereum/wiki/wiki/Design-Rationale" target="blank" rel="noopener">Design Rationale</a> - The purpose of this document will be to detail all of the finer potentially nonobvious or in some cases controversial decisions that were made in the process of building the Ethereum protocol, as well as showing the risks involved in both our approach and possible alternatives. ― 36 minute read
                                                </li>
                                                <li>
                                                      <a href="https://ethereum.github.io/yellowpaper/paper.pdf" target="blank" rel="noopener">Yellow Paper</a> - The technical Bible of Ethereum, a formal definition of the protocol, very math-heavy; a rigorous discussion of Ethereum’s "design, implementation issues, the opportunities it provides and the future hurdles" envisaged ― 54 minute read
                                                </li>
                                                <li>
                                                      <a href="https://cdn.hackaday.io/files/10879465447136/Mauve%20Paper%20Vitalik.pdf" target="blank" rel="noopener">Mauve paper</a> - Technical discussion of in-development scaling features of Ethereum, namely, a combination of proof-of-stake and sharding ― 27 minute read
                                                </li>
                                                <li>
                                                      <a href="https://eprint.iacr.org/2013/881.pdf" target="blank" rel="noopener">GHOST Protocol</a> - Seminal 2013 paper that introduced the GHOST Protocol, of which Ethereum implements a simplified version, and which combats the security and centralization issues of fast block time blockchains ― 56 minute read
                                                </li>
                                          </ul>

                                    <h5>Economics:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://blog.ethereum.org/2016/07/27/inflation-transaction-fees-cryptocurrency-monetary-policy/" target="blank" rel="noopener">Monetary Policy</a> - Analysis of cryptocurrency monetary policy possibilities to best meet objectives of network security, aligned incentives, and supply predictability ― 15 minute read
                                                </li>
                                                <li>
                                                      <a href="https://github.com/LeastAuthority/ethereum-analyses/blob/master/GasEcon.md" target="blank" rel="noopener">Gas Economics</a> - Explores the question, "does [the Gas Economics model] provide the right incentives and protections to miners, verifiers, clients, and the system as a whole?" Also explores "the ways in which Ethereum programs can be composed, with an eye towards managing the incentives and risks experienced by the cooperating/competing program authors." ― 55 minute read
                                                </li>
                                          </ul>

                                    <h5>Cryptography:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://github.com/ethereum/wiki/wiki/Ethash" target="blank" rel="noopener">ETHash</a> - Formal specification for Ethereum’s GPU-friendly, ASIC-resistant proof-of-work hashing algorithm ― 8 minute read
                                                </li>
                                                <li>
                                                      <a href="https://github.com/LeastAuthority/ethereum-analyses/blob/master/PoW.md" target="blank" rel="noopener">Analysis of ETHash</a> - Thorough analysis, including overview and analyses of its design, feasibility, and randomizing functions ― 37 minute read
                                                </li>
                                                <li>
                                                      <a href="https://blog.ethereum.org/2015/11/15/merkling-in-ethereum/" target="blank" rel="noopener">Why Patricia Trees</a> - Quick introduction to how merkle trees work, their present and future value for blockchains, and basic reasoning behind Ethereum’s "Merkle Patricia Tree" ― 9 minute read
                                                </li>
                                                <li>
                                                      <a href="https://github.com/ethereum/wiki/wiki/Patricia-Tree" target="blank" rel="noopener">Patricia Trees</a> - Detailed specification ― 8 minute read
                                                </li>
                                          </ul>

                                    <h5>Privacy:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://blog.ethereum.org/2016/01/15/privacy-on-the-blockchain/" target="blank" rel="noopener">Privacy on the Blockchain</a> - Discussion of how to increase privacy on the blockchain (cryptographically secure obfuscation, secure multi-party computation, low-tech approaches), and the future of privacy ― 20 minute read
                                                </li>

                                          </ul>

                                    <h5>Security:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://eprint.iacr.org/2016/633.pdf" target="blank" rel="noopener">Oyente paper </a> - Proposal for fixing security flaws in Ethereum smart contracts ― 52 minute read
                                                </li>
                                          </ul>

                                    <h5>Proof of Stake:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ" target="blank" rel="noopener">Proof of Stake FAQ</a> -  Guided FAQ, best read in order ― 42 minute read
                                                </li>
                                                <li>
                                                      <a href="https://medium.com/@VitalikButerin/minimal-slashing-conditions-20f0b500fc6c" target="blank" rel="noopener">Minimal Slashing Conditions</a> - Explanation of slashing conditions that allow Casper, the protocol for Ethereum proof-of-stake, to achieve economic finality ― 14 minute read
                                                </li>
                                                <li>
                                                      <a href="https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/" target="blank" rel="noopener">Understanding Casper</a> - Explanation of Casper PoS Economics ― 20 minute read
                                                </li>
                                                <li>
                                                      <a href="https://medium.com/@AFDudley/casper-as-i-understand-it-c0ceb6c6e49a" target="blank" rel="noopener">Casper, as I understand It </a> - 3rd party analysis  of Casper compared to Tendermint consensus ― 5 minute read
                                                </li>
                                          </ul>

                                    <h5>Sharding:</h5>
                                          <ul>
                                                <li>
                                                      <a href="https://github.com/ethereum/wiki/wiki/Sharding-FAQ" target="blank" rel="noopener">Sharding FAQ</a> - Another guided FAQ, best read in order ― 52 minute read
                                                </li>
                                                <li>
                                                      <a href="http://vitalik.ca/files/basic_sharding.html" target="blank" rel="noopener">Sharding v1 Proposal</a> - Ethereum sharding specification ― 8 minute read
                                                </li>
                                          </ul>

                                    <h5>Other:</h5>
                                          <ul>
                                                <li>
                                                <a href="https://github.com/ethereum/wiki/wiki/Problems" target="blank" rel="noopener">Challenges</a> - Explanation of the abundant technological, consensus-related, and economic problems the blockchain community has yet to solve ― 60 minute read
                                                </li>
                                          </ul>


                        <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                        <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                        <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>
     


                              </div>
                      </div><!-- /.panel-->

                      <div id="X4" class="hidden">
                            <div class="content text-center">
                                  <h3> Ethereum For a 7 Year Old </h3>

                                  <p> Think of Ethereum as a network of computers which can preserve a promise or a contract. No one can go back on their promise because it is available to everyone and it can not be changed. </p>

                                  <p> Suppose your dad promises to get you an iPad on your birthday. However, when your birthday comes around you get an iPod instead. Won't you be disappointed? What if you remind him of his promise and he says he does not remember. Of course, you are going to forgive your dad. But, what if you take his promise and put it on Ethereum as a contract. Now your mom and everyone in the world will know. There is no way he could forget it as this contract lives everywhere on the Ethereum network. </p>


                                  <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                                  <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                                  <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>


                            </div>
                      </div><!-- /.panel-->

                      <div id="X5" class="hidden">
                            <div class="content text-center">
                                  <h3> Ethereum For An Investor </h3>


                                  <p>  The Ethereum network has native tokens called Ethers. One needs Ethers to send any transaction to the Ethereum network. Ethers are tradable. You can acquire them either by purchasing from an exchange or by mining. Just like Bitcoin, Ethers bring out alot of speculators or traders who hope to make quick money or hold for long-term gains.

                                  <p> Ethereum provides programming abilities so that one can write complete business logic and hold it inside a program called a "smart contract". The smart contract is tied to an account on Ethereum and everytime a transaction is issued against that account, the programming logic is executed by the Ethereum Virtual Machine running on each Ethereum client. </p>

                                  <p> The programming ability on Ethereum inside a "smart contract" has given rise to a boom in the Initial Coin Offering (ICO) market. Smart contracts allows people to create and issue non native tokens. </p>

                                  <h5> ICO </h5>

                                  <p> ICO's are similar to IPO's (Initial Public Offerings). However, instead of buying shares, investors buy tokens of a cryptocurrency. Another main difference is that shares give shareholders or investors equity in a company, while tokens do not. Shares are also regulated heavily by the US, while tokens are not. This is, however, changing by the minute and varies from country to country. For the most part, the ICO scene is the wild west. </p>

                                  <p> One can paint ICOs as a venture capital and crowdfunding love child. ICO's allow tech enthusiast and blockchain nerds to invest in new, cutting-edge blockchain projects and protocol. ICO's allow blockchain projects to raise early-stage capital without going through the traditional venture capital firms and capitalists. </p>

                                  <p> The major downside of ICO's, as mentioned before, is the lack of regulation and number of scams in the market right now. Many blockchain startups do an ICO without having a project out there or even a whitepaper or plan for what they are going to do. There is also a lot of hype around projects and there is no regulation to stop blockchain startup owners from taking their tokens and running off with them. </p>


                                  <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                                  <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                                  <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>

                
                            </div>
                       </div><!-- /.panel-->

                      <div id="X6" class="hidden">
                            <div class="content text-center">
                                  <h3> Ethereum For a Podcast Lover </h3>
                                  <audio data-theme="night" data-src="https://changelog.com/podcast/222/embed" src="https://cdn.changelog.com/uploads/podcast/222/the-changelog-222.mp3" preload="none" class="changelog-episode" controls></audio><script async src="//cdn.changelog.com/embed.js"></script>

                                  <h3> Ethereum and Cryptocurrency with Gavin Wood </h3>

                                  <p> "Gavin Wood is Founder of Ethereum, creator of the Solidity contract language, and Founder of Ethcore — the company that created Parity, an open source Ethereum client." </p>

                                  <h5> Talks about thing such as.... </h5>

                                  <ul>

                                        <li>  DAO </li>
                                        <li>  Future of digital currency </li>
                                        <li>  Ethereum's beginnings </li>
                                        <li>  Possibilites on Ethereum </li>
                                        <li>  Ethereum Virtual Machine </li>
                                  </ul>

                                  <p> And much more... </p>


                                  <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                                  <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                                  <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>


                             </div>
                      </div><!-- /.panel-->


                      <div id="X7" class="hidden">
                            <div class="content text-center">
                                  <h3> Ethereum FAQ </h3>
                                  <p> <b> Q</b>: What is the best place to have discussions about Ethereum </p>

                                  <p> <b> A</b>: For developers, there is the <a href="https://www.reddit.com/r/ethdev/" target="blank" rel="noopener"> Reddit subreddit Eth Dev </a> and various channels at <a href="https://gitter.im/ethereum" target="blank" rel="noopener"> Ethereum Gitter</a>, along with <a href="https://ethereum.stackexchange.com/" target="blank" rel="noopener"> Ethereum Stack Overflow.</a> </p>


                                  <p> <b> Q</b>: What are some current Dapps I can use? </p>

                                   <p> <b> A</b>: <a href="https://golem.network/" target="blank" rel="noopener"> Golem</a> is a computation network built on the Ethereum blockchain. With Golem, you can buy or sell computational power. This allows to complete a computationally-heavy task on someone else's computer or sell their computing power that they are not using to someone to wants to use it. Previously selling and buying computational power was a pain and took days.  Golem innovates on this as it only takes minutes and all computations take place on the blockchain. Another important part is that nothing  touches the host's system. </p>

                                   <p> <a href="https://gnosis.pm/" target="blank" rel="noopener"> Gnosis</a>/<a href="https://augur.net/" target="blank" rel="noopener">Augur</a> are 2 of the most important and successful decentralized apps on the Ethereum blockchain. They are both prediction markets. Prediction markets allow users to buy and sell shares in the outcome of an event (ex=> Will the Patriots win the Super Bowl? Yes or No) and be rewarded with REP tokens if they predicted the outcome correctly. The data can be used by individuals or organizations to make more accurate decisions thanks to the "wisdom of the crowd” – a large group’s aggregated answers to questions involving quantity estimation, general world knowledge, and spatial reasoning has generally been found to be as good as, and often better than, the answer given by any of the individuals within the group. </p>
 

                                  <p> <b> Q</b>: What are the main differences between Ethereum and Bitcoin? </p>

                                  <p> <b> A</b>: Bitcoin is decentralized digital money. Ethereum is programmable digital money. </p>

                                  <ul>
                                        <li> Block time: Bitcoin has a block completion time of about 10 minutes while Ethereum has a much shorter one of 12 seconds. This means that a Bitcoin transaction is confirmed in 10 minutes while an Ethereum one is confirmed in 12 seconds.  </li>

                                        <li> Ethereum is Turing-Complete while Bitcoin is not: This means that on the Ethereum blockchain, one can write smart contracts that can pretty much solve any reasonable computational problem. </li>

                                        <li> Hash Functions: Bitcoin uses the FBI developed hash function of SHA-256, while Ethereum uses its own hash function called Ethash. The main difference between these 2 hash functions is that Ethash is ASIC Resistant. This means that there will be no significant advantage mining on dedicated hardware (ASIC), as compared to a CPU implementation (regular computer). ASIC-resistant hash functions require a lot of memory, which is hard to implement on an ASIC. ASIC-resistant hash functions level the playing field, allowing regular people to mine profitably. </li>
                                  </ul>

                                  <p> <b> Q</b>: If Ethereum operates as a slow clunky computer, what are the developers doing to address that, if anything?</p>

                                  <p> <b> A</b>: Developers are currently working on numerous solutions to the problem that is the slowness of Ethereum. Some of the current solutions proposed are the Raiden Network, Sharding, Plasma, and much more.  </p>

                                  <p> Some good articles on Ethereum scaling problems and solutions are <a href="https://coinjoker.com/raiden-explained/" target="blank" rel="noopener"> Raiden Explained</a>, <a href="https://hackernoon.com/blockchains-dont-scale-not-today-at-least-but-there-s-hope-2cb43946551a" target="blank" rel="noopener"> Blockchains don’t scale. Not today, at least. But there’s hope</a>, <a href="https://medium.com/chain-cloud-company-blog/plasma-in-10-minutes-c856da94e339" target="blank" rel="noopener"> Plasma in 10 Minutes</a> and <a href="https://github.com/ethereum/wiki/wiki/Sharding-FAQ" target="blank" rel="noopener"> Sharding FAQ</a> </p>

                                  <p> <b> Q</b>: How can I learn to develop smart contracts?</p>

                                  <p> <b> A</b>: Some tutorials: <a href="https://medium.com/@ConsenSys/a-101-noob-intro-to-programming-smart-contracts-on-ethereum-695d15c1dab4" target="blank" rel="noopener"> A 101 Noob Intro to Programming Smart Contracts on Ethereum</a>, <a href="https://www.ethereum.org/greeter" target="blank" rel="noopener"> Create a hello world contract in Ethereum</a>, and <a href="https://blog.zeppelin.solutions/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05" target="blank" rel="noopener"> The hitchhikers guide to smart contracts in Ethereum.</a> </p>



                                  <a href="https://twitter.com/share?ref_src=twsrc%5Etfw" class="twitter-share-button" data-size="large" data-text="Ethereum Explained For Your Level" data-url="http://explainmeplease.com/resources?q=Ethereum" data-related="faatehim" data-show-count="false">Tweet</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> <br>

                                  <div class="fb-like social" data-href="http://explainmeplease.com/resources?q=Ethereum" data-layout="button" data-action="like" data-size="large" data-show-faces="true" data-share="true"></div> <br>

                                  <a class="github-button" href="https://github.com/faatehim/xplain" data-icon="octicon-star" data-size="large" aria-label="Star faatehim/xplain on GitHub">Star</a>

                            </div>
                      </div><!-- /.panel-->


    </div>

          <div class="col"></div>
           </div>
    

  
    <script src="js/jquery-1.11.1.min.js"></script>
    <script src="js/typeahead.bundle.js"></script>
    <script src="js/custom.js"></script>
    
</body>
</html>