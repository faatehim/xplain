<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <html lang="en">
    <title>Explain Me Please - Ethereum</title>
    <meta name="description" content="Description of the page less than 150 characters">
    <link rel="stylesheet" href="https://unpkg.com/wingcss"/>
    <link href="css/styles.css" rel="stylesheet">
    <html dir="ltr">


</head>

<body>
    <div class="nav horizontal-align center">
                    <div class="nav-item">
                        <h6> <a href="#"> <b> Explain Me Please </b> </a> </h6>
                    </div>

                    <div class="nav-item">
                       <h6> <a href="https://faatehim.github.io"> <b> Made by Faateh Mohammad </b> </a>  </h6>

                    </div>

                    <div class="nav-item">
                      <div id="the-basics" class="sbox" align="right">
                           <input class="typeahead" type="text" placeholder="I want to learn about......."
                           onkeydown="getSearchResult(this)">
                        </div>
                    </div>
                 </div>

          <h2 class="page-header text-center"> <b> 💻 Ethereum Explained </b> </h2>
             



          <div class="nav  horizontal-align center">

           <a href="#" class="nav-item" onclick="showContent('#X1')"> |Average Joe|</a>
                 <a href="#" class="nav-item"onclick="showContent('#X2')"> |Video Lover|</a>
                 <a href="#" class="nav-item" onclick="showContent('#X3')"> |Nerd|</a>
                 <a href="#" class="nav-item" onclick="showContent('#X4')"> |5 Year Old|</a>
                 <a href="#" class="nav-item" onclick="showContent('#X5')"> |Investor|
                 </a>
                 <a href="#" class="nav-item" onclick="showContent('#X6')"> |Podcast Lover|</a>
                 <a href="#" class="nav-item" onclick="showContent('#X7')"> |FAQ|</a>
          </div>
        
    <div class="row">

       <div class="col"></div>


   
   <div class="col">
  

    <div id="X1" class="hidden content text-center">
         <h3> Explain Me Please I'm The Average Joe</h3>

         <p> Ethereum is a decentralized application and smart contract platform on the blockchain. Before we dive into what all of that means, you must understand what a blockchain is.....</p>

         <h5> Blockchain Explanation</h5>

         <p> Knowledge about bitcoin would be useful </p>

         <p> A Blockchain is a distributed, immutable, public ledger </p>

         <p> Distributed meaning there is no master copy by non person. They are many synchronized versions of the blockchain on nodes(computers) all around the world </p>

         <p> Immutable meaning that once a transaction is present in the blockchain for an hour or two, altering or erasing it becomes impossible. This is because it requires a lot of computational power to undo the transaction. </p>

         <p> A ledger is simply a list of transaction in a blockchain </p>

         <p> To understand how several people are able to keep their copies of the database in sync with everyone else, imagine there are ten individuals in a network. Everyone is sitting with an empty file folder and an empty page in front of them. Whenever anyone does something important in the network, like transferring money, they announce it to everyone in the network.

        <p> Everyone makes a note of the announcement on their pages until the page is filled. When it does, everyone has to seal the contents of the page by solving a mathematical puzzle. Solving the mathematical puzzle ensures that everyone’s page had same contents and that they can never be modified. Whoever does it first, gets rewarded with some amount of cryptocurrency. </p>

        <p> Once the page is sealed, the page is added to the file folder, a new page is brought out and the process continues forever. As time passes, these pages (blocks) that contain important records (transactions) are added to the folder (chain), thus forming the database (blockchain). </p>

        <h5> Uses of Blockchain </h5>

        <p> Bitcoin uses the blockchain to store records of financial transactions, acting like a bank to guarantee security and trust. However, people started to realized Bitcoin was restrictive in programming money and building applications onto the blockchain. Building basic applications like a decentralized crowdfunding app required months of work even for seasoned programmers. Introducing Ethereum.

        <h5> How does Ethereum work </h5>

        <p> Just like any other Blockchain, Ethereum requires many nodes(computers) running a software on their computer to guarantee security and trust. Every node participating in the Ethereum protocol runs a software on their on their computer called Ethereum Virtual Machine(EVM). The EVM is a system which understands and executes all the software written in an specific Ethereum programming language - Solidity(similar to Javascript) and Serpent (similar to Python). The applications or software run by the EVM are called "smart contracts" </p>

        <p> This is what makes Ethereum a world computer, but a expensive and slow one. It has about the same processing power as an old and crusty 90's smartphone. You may be asking, if that is true, what would anyone use Ethereum? Well we will talk about that </p>

        <p> To run any smart contract, you must pay a price so no unlimited loops can be run which crash the system. You must pay this price in Ethers, the native cryptocurrency to Ethereum. Ether is to Ethereum as Bitcoin(currency) is to Bitcoin(system) </p>

        <p> In Ethereum, they are 2 types of accounts or users. </p>

        <p> 1. Externally Owned Accounts => owned by some external entity (say a person or company), can send and receive ether's </p>

        <p> 2. Contract Accounts => smart contracts, can send and receieve ethers just like externally owner accounts but can also run a predifined computer program to perform various actions when triggered. </p>

        <h5> Example </h5>

        <p> Lets say Mike and Annie want to place a bet on a soccer game. Mike is a fan of the team Real Madrid and Annie is a ardent supporter of FC Barcelona(rivals). There is a Real Madrid vs FC Barcelona game coming up in a few days. They agree that the losing team's fan will have to pay the other $500. They are many ways to do this, with each having its pro's and cons </p>

        <p> 1. Trusting Each Other <br> This could work as both Mike and Annie are friends and the amount we are betting is not to much. However what if they were strangers who did not trust each other? What is these was a large amount of money and they did not want any cheating happening? </p>

        <p> 2. Signing a Legal Agreement <br> Sure they could go to court and both sign an agreement that defines all the terms of our bet and the consequence for the loser. However this process would be incredibly time consuming and expensive. </p>

        <p> 3. Get Help from Friend they both knew and trusted <br> This could work as they would both give their $500 to him. After the match had ended, the trusted friend could check the score and give the $1000 to the winner. However, this method has similar shortcomings to the first method of both Mike and Annie trusting each other. If they were strangers, they could not trust each other. Is there another cheap, easy way which guarantees the winner will get $1000 after the match? </p> 

        <p> Creating a smart contract on Ethereum could help save Annie and Mike's day in this case. They could write code that accepts $500 from both of their accounts, and then the next day uses an API to check the match score and transfer the ether worth of $1000 to the winner. Win-win situation. A smart contract also has the pro's that it is immutable, as it is in the blockchain. No one can do any cheating.</p>

        <h5> How are smart contracts related to blockchain? </h5>

        <p> They are 3 kinds of transactions on the blockchain... </p>

        <p> 1. Transfer of Ether from one account to another account <br> Bitcoin-like transactions. Contains info about the humans sender and human recipient </p>

        <p> 2. Transfer of ether from one user to no one <br> These transactions are used to create a smart contract using contents present in the data field. These transactions contain info about the Sender and Data. This data contains the code which will run the smart contract </p>

        <p> 3. Tranfers of ether from extrnally owned account to a smart contact <br> Whenever a account wants to execute a smart contract, they must make a transaction to the smart contract and put the instructions for the execution in the data field </p>

        <h5> What is Gas? </h5>

        <p> Every smart contract must pay a certain price for the EVM to execute it .This price is paid to the node that actually spends memory, storage, computation and electricity to execute and verify the smart contract. </p>

        <p> To calculate the prices of smart contracts, every statement has an assigned cost to it.  The unit in which the cost is defined is called Gas. Eventually, Gas is converted to ether using an exchange rate. Whenever you execute a smart contract, you have to define the maximum Gas to be consumed. The execution will stop either when the execution is completed or when the Gas Limit is reached. This is done to avoid infinite loops in smart contracts, preventing the program getting stuck executing a set of statements repeatedly without proceeding further. </p>

        <p> Such situations occur because of programmer’s carelessness. With every repetition, some of the assigned Gas will be used, thus making any infinite loop a finite one. It doesn’t make any sense for a node to be stuck in execution because of a programmer’s mistake. The concept of Gas solves this problem. </p>

        <h5> Conclusion </h5>

        <p> That is Ethereum. It allows for the first time in history, money to be programmable. Places where they are traditionally multiple third parties whih make the process slow are now not neccesary. With Ethereum, a piece of code could automatically transfer the home ownership to the buyer and the funds to the seller after a deal is agreed upon without needing a third party to execute on their behalf. </p>

        <p> The potential for this is incredible! Think of the numerous applications that act as a third party to connect you with others based on some set logic (e.g. Uber, Airbnb, eBay). Many of the centralized systems we use today could be built in a decentralized manner on Ethereum. With Ethereum you can make these transactions trustless which opens up an entire world of decentralized applications. </p>



    </div><!-- /.panel-->

       <div id="X2" class="hidden">
            <div class="content text-center">
                <h3> Explain Me Please I Love Videos</h3>
                 <iframe width="560" height="315" src="https://www.youtube.com/embed/WSN5BaCzsbo" frameborder="0" allowfullscreen></iframe>
                 <iframe width="560" height="315" src="https://www.youtube.com/embed/w9WLo33KfCY" frameborder="0" allowfullscreen></iframe>
                 <iframe width="560" height="315" src="https://www.youtube.com/embed/TDGq4aeevgY" frameborder="0" allowfullscreen></iframe>
            </div>
        </div><!-- /.panel-->

        <div id="X3" class="hidden">
               <div class="content text-center">
                <h3> Explain me please I am a Nerd </h3> 


                <h5>Design:</h5>
                    <ul>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Design-Rationale" target="blank">Design Rationale</a> - "The purpose of this document will be to detail all of the finer potentially nonobvious or in some cases controversial decisions that were made in the process of building the Ethereum protocol, as well as showing the risks involved in both our approach and possible alternatives."" ― 36 minute read
                        </li>
                        <li>
                            <a href="https://ethereum.github.io/yellowpaper/paper.pdf" target="blank">Yellow Paper</a> - The technical Bible of Ethereum, a formal definition of the protocol, very math-heavy; a rigorous discussion of Ethereum’s "design, implementation issues, the opportunities it provides and the future hurdles" envisaged ― 54 minute read
                        </li>
                        <li>
                            <a href="https://cdn.hackaday.io/files/10879465447136/Mauve%20Paper%20Vitalik.pdf" target="blank">Mauve paper</a> - Technical discussion of in-development scaling features of Ethereum, namely, a combination of proof-of-stake and sharding ― 27 minute read
                        </li>
                        <li>
                            <a href="https://eprint.iacr.org/2013/881.pdf" target="blank">GHOST Protocol</a> - Seminal 2013 paper that introduced the GHOST Protocol, of which Ethereum implements a simplified version, and which combats the security and centralization issues of fast block time blockchains ― 56 minute read
                        </li>
                    </ul>

                    <h5>Economics:</h5>
                    <ul>
                        <li>
                            <a href="https://blog.ethereum.org/2016/07/27/inflation-transaction-fees-cryptocurrency-monetary-policy/" target="blank">Monetary Policy</a> - Analysis of cryptocurrency monetary policy possibilities to best meet objectives of network security, aligned incentives, and supply predictability ― 15 minute read
                        </li>
                        <li>
                            <a href="https://github.com/LeastAuthority/ethereum-analyses/blob/master/GasEcon.md" target="blank">Gas Economics</a> - Explores the question, "does [the Gas Economics model] provide the right incentives and protections to miners, verifiers, clients, and the system as a whole?" Also explores "the ways in which Ethereum programs can be composed, with an eye towards managing the incentives and risks experienced by the cooperating/competing program authors." ― 55 minute read
                        </li>
                    </ul>

                    <h5>Cryptography:</h5>
                    <ul>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Ethash" target="blank">ETHash</a> - Formal specification for Ethereum’s GPU-friendly, ASIC-resistant proof-of-work hashing algorithm ― 8 minute read
                        </li>
                        <li>
                            <a href="https://github.com/LeastAuthority/ethereum-analyses/blob/master/PoW.md" target="blank">Analysis of ETHash</a> - Thorough analysis, including overview and analyses of its design, feasibility, and randomizing functions ― 37 minute read
                        </li>
                        <li>
                            <a href="https://blog.ethereum.org/2015/11/15/merkling-in-ethereum/" target="blank">Why Patricia Trees</a> - Quick introduction to how merkle trees work, their present and future value for blockchains, and basic reasoning behind Ethereum’s "Merkle Patricia Tree" ― 9 minute read
                        </p>
                        </li>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Patricia-Tree" target="blank">Patricia Trees</a> - Detailed specification ― 8 minute read
                        </li>
                    </ul>

                    <h5>Privacy:</h5>
                    <ul>
                        <li>
                            <a href="https://blog.ethereum.org/2016/01/15/privacy-on-the-blockchain/" target="blank">Privacy on the Blockchain</a> - Discussion of how to increase privacy on the blockchain (cryptographically secure obfuscation, secure multi-party computation, low-tech approaches), and the future of privacy ― 20 minute read
                        </li>

                    </ul>

                    <h5>Security:</h5>
                    <ul>
                        <li>
                            <a href="https://eprint.iacr.org/2016/633.pdf" target="blank">Oyente paper </a> - Proposal for fixing security flaws in Ethereum smart contracts ― 52 minute read
                        </li>

                    </ul>

                    <h5>Proof of Stake:</h5>
                    <ul>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ" target="blank">Proof of Stake FAQ</a> -  Guided FAQ, best read in order ― 42 minute read
                        </li>
                        <li>
                            <a href="https://medium.com/@VitalikButerin/minimal-slashing-conditions-20f0b500fc6c" target="blank">Minimal Slashing Conditions</a> - Explanation of slashing conditions that allow Casper, the protocol for Ethereum proof-of-stake, to achieve economic finality ― 14 minute read
                        </li>
                        <li>
                            <a href="https://blog.ethereum.org/2015/12/28/understanding-serenity-part-2-casper/" target="blank">Understanding Casper</a> - Explanation of Casper PoS Economics ― 20 minute read
                        </li>
                        <li>
                            <a href="https://medium.com/@AFDudley/casper-as-i-understand-it-c0ceb6c6e49a" target="blank">Casper, as I understand It </a> - 3rd party analysis  of Casper compared to Tendermint consensus ― 5 minute read
                        </li>
                    </ul>

                    <h5>Sharding:</h5>
                    <ul>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Sharding-FAQ" target="blank">Sharding FAQ</a> - Another guided FAQ, best read in order ― 52 minute read
                        </li>
                        <li>
                            <a href="http://vitalik.ca/files/basic_sharding.html" target="blank">Sharding v1 Proposal</a> - Ethereum sharding specification ― 8 minute read
                        </li>
                    </ul>

                    <h5>Other:</h5>
                    <ul>
                        <li>
                            <a href="https://github.com/ethereum/wiki/wiki/Problems" target="blank">Challenges</a> - Explanation of the abundant technological, consensus-related, and economic problems the blockchain community has yet to solve ― 60 minute read
                        </li>
                    </ul>
 


              </div>
        </div><!-- /.panel-->
        <div id="X4" class="hidden">
            <div class="content text-center">
                <h3> Explain Me Please I'm 5 Years Old </h3>
                <p> A world-wide computer that is formed by lots of computers talking to each other. </p>

               <p> (Bonus: just like Bitcoin is a world-wide Excel spreadsheet that is formed by lots of computers talking to each other) </p>

               <p> Advantage: no one can turn it off, no one can tamper with it, and it runs exactly as programmed - because no one can, at the same time, break into the houses of all of the thousands of people running the lots of computers talking to each other - and turn those off or change something about the way they run). </p>

               <p> (Bonus: unless... you can convince all of the thousands of people running those computers talking to each other... to change exactly the same thing at the same time about how those computers talk to each other. That is called a hard fork, but you have to come up with really good arguments to convince those thousands of people!) </p>

               <p> Disadvantage: it's actually a really slow computer because... all of those thousands of computers that form the world-wide computer need to talk to each other first. That's a lot of talking. And it's expensive. Because the people who own these thousands of computers, all want a bit back for their electricity and the fact they bought a computer just to talk to other computers. </p>

             <p> (Bonus: In order to pay them, we have Ether. If you have a lot of Ether, you can do a lot with this world-wide computer. Or you can just keep and sell it to someone who wants to do something with this world-wide computer.) </p>
            </div>
        </div><!-- /.panel-->
        <div id="X5" class="hidden">
            <div class="content text-center">
                <h3> Explain Me Please I'm a Investor </h3>

                <h5> Tokens </h5>

                <p> Cryptocurrencies could be discribed as native tokens. Native tokens are intrinsic to a blockchain and are part of of the incentive scheme to encourage people to validate transactions. Non-Native TOkens are created on top of programmable blockhains such as Ethereum and NEO. </p>

                <p> Creating a Non-Native Token on Ethereum is just as easy as writing 25 lines of code for a  decentralied kickstarter app. These ease of use and simplicity is what has made Ethereum the most widely used protocol for token created. </p>


                <h5> ICO </h5>

                <p> The public can acquire a token by either mining, purchasing in a secondary market such as an exchange or p2p, or by participating in an ICO, or a Initial Coin Offering. ICO's and similar to IPOS (Initial Public Offerings). However instead of buying shares, investors but tokens of a cryptocurenncy. Another main difference is that shares give shareholders or investors equity in a company, while tokens do not. Shares are also regulated heavely by the US, while tokens are not. This is however changing by the minute and varies from country to country. For the most part, the ICO scene is the wild west. </p>

                <p> One can paint ICOs as a venture capital and crowdfunding love child. ICO's allow tech enthusiast and blockchain nerds a easy way to invest in new, cutting edge blockchain projects and protocol. ICO's allow blockchain projects to raise early stage capital without going through the traditional venture capital firms and capitalists </p>

                <p> The major downside of ICO's, as mentioned before, is the lack of regulation and number of scams in the market rightnow. Many blockchain startups ICO raise without having a project out there or even a whitepaper or plan for what they are going to do. There is al lot of hype around projects and there is no regulation to stop blockchain startup owners from taking their tokens and running off with them. </p>

                <h5> Non-Native Tokens </h5>

                <p> Protocols like Ethereum have made it easy for developers and entrepreneurs to build tokens, ICO's have allowed regular people to invest in those digital tokens and reap the rewards if it is sucessfull. No regulations plus + Easy of creating and investing has resulted in a huge ICO boom with tens of startups doing <a href="https://topicolist.com/?ref=producthunt"> ICO's weekly </a> It can however be clearly seen in the non native token space the exuberance of investors. Investors of all kinds are throwing money at worthless tokens which have alot of hype behind them simply in the hopes that one of them will be a hit and they will make their profit </p>

                <p> However there is one question. What do you get when you invest/but a non-native token, say on Ethereum </p>

                <p> There are 8 kinds of non-native tokens: </p>

                <p> Protocol Tokens </p>

                <p> Tokens inssued for a future service and accessing the platform/services. Most tokens are issued when a platform is more than an idea. </p>

                <p> Asset-backed tokens: where the token represents a claim on a underlying asset, and to cliam the underylgina sset one sends the token to the issuer (kinda like fiat money). </p>

                <p> Token issued under the promise of participation in future revenues, even though there is no legal obligation for companies to honor such promises. Participation percentages and timing are always left undefined. </p>

                <p> Token said to present equity in the issuing company, giving token holders votes as shareholders, participation in future dividends, and supposedly ownership of the company as well. </p>

                <p> Tokens issued under the promise of appreciation backed by promises from the company  to repurchase and destroy tokens once sustainable revenue materializes. </p>

                <p> Tokens with no value proposition. </p>

                <p> Scams </p>

                <p> Protocol Tokens and gift card tokens are certainly valuable. If the blockchain becomes popular and people find use in it, the token's value will rise accordingly. </p>

                <p> Asset-backed tokens are also useful. It is easier to transfer ownership of a commodity such as gold in digital format rather than in a physical format. </p>

                <p> Tokens that offer revenue participation are also valuable. In a ideal situation, the conditions would be defined prior to the ICO and the distribution of profit would be hard coded in a smart contract. </p>

                <p> Equity tokens are similar to participation tokens with the explicit mention of voting rights.  Equity tokens have been mostly avoided by issuers to reduce the probability of regulators classifying tokens as regulated securities. Marketing of equity tokens is generally misleading, because simply calling a token a share does not make the token a share. A token that isn’t backed by equity documentation cannot be equity. Equity placements require documentation filings with a regulator and the publication of a prospectus for investors. Furthermore, even if equity documentation were there, it is not clear equity tokens could legally represent shares (laws are country dependent and subject to change). </p>

                <p> The last 3 kinds of tokens have little to no intrinsic value. Dissapointingly, investors still throw money at them, failing to differentiate a great project and great value. A project might even have a great idea and team but does not have a token distribution method that is a good value of investors. Some tokens are just terrible overall, yet still get some funding.... </p>

            </div>
        </div><!-- /.panel-->
        <div id="X6" class="hidden">
            <div class="content text-center">
                <h3> Explain Me Please I Am a Podcast Lover </h3>
                <audio data-theme="night" data-src="https://changelog.com/podcast/222/embed" src="https://cdn.changelog.com/uploads/podcast/222/the-changelog-222.mp3" preload="none" class="changelog-episode" controls></audio><script async src="//cdn.changelog.com/embed.js"></script>

                <h3> Ethereum and Cryptocurrency with Gavin Wood </h3>

                <p> Talks about things such as ...... </p>

                <p> DAO </p>
                <p> Future of digital currency </p>
                <p> Ethereum's beginnings </p>
                <p> Possibilites on Ethereum </p>

            </div>
        </div><!-- /.panel-->


        <div id="X7" class="hidden">
            <div class="content text-center">
                <h3> Ethereum FAQ </h3>
                <p> <b> Q </b>: What is the best place to have discussions about Ethereum </p>

                <p> <b> A </b>: For developers, there is the <a href="https://www.reddit.com/r/ethdev/"> Reddit subreddit Eth Dev </a> and various channels at <a href="https://gitter.im/ethereum"> Ethereum Gitter </a>, along with <a href="https://ethereum.stackexchange.com/"> Ethereum Stack Overflow. </a> </p>


                <p> <b> Q </b>: What are some current Dapps I can use? </p>

                <p> <b> A </b>: <a href="https://golem.network/"> Golem</a> is a computation network based on the Ethereum blockchain. With Golem, one can buy or sell computational power, which means you can complete a computationally-heavy task on someone elses computer or sell your computing power that you are not using to someone to wants it. Previously buying/selling computational power was a pain and took days. Golem innovates on this as it only takes minutes and all computations take place on the blockchain and do not touch the host's system </p>

                <p> <a href="https://gnosis.pm/"> Gnosis</a>/<a href="https://augur.net/">Augur</a> are 2 of the most important and succesful decentralised apps on the Ethereum blockchain. They are both prediction markets. Prediction markets allow users to buy and sell shares in the outcome of a event(ex=> Will the Patriots win the super bowl? Yes or No) and be rewarded with REP tokens if they predicted the outcome correctly. The data can be used by individuals or organizations to make more accurate decisions thanks to the” wisdom of the crowd” –a large group’s aggregated answers to questions involving quantity estimation, general world knowledge, and spatial reasoning has generally been found to be as good as, and often better than, the answer given by any of the individuals within the group. </p>
 
                <p> <a href="https://www.uport.me/">Uport</a> One of the most pressing issues on the internet today is the centralization of user’s data. When you accept the terms and conditions of that app you just downloaded you aren’t just getting free stuff, you are becoming the product that company capitalizes from in the future when it comes time to monetize.
                Another problem is that in today’s internet, our identity and reputation is scattered across a myriad of services. If something bad were to happen to eBay’s datacenter, your hard-earned reputation as a merchant would be destroyed forever. Sellers would then have to migrate to another platform and start all over again. A hassle for an individuals whose sole source of income is their reputation as a successful merchant.
                Solutions like uPort could help to securely store your encrypted information on Ethereum’s blockchain, allowing you to share it whenever and with whoever you want to. </p>

                <p> <b> Q </b> What are the main differences between Ethereum and Bitcoin? </p>

                <p> <b> A </b> Bitcoin is decentralized digital money. Ethereum is programmable digital money. </p>

                <p> Block time: Bitcoin has a block completion time of about 10 minutes while Ethereum has a much shorter one of 12 seconds. This means that a bitcoin transaction is confirmed in 10 minutes while a Ethereum one is confirmed in 12 seconds.  </p>

                <p> Ethereum is turing-complete while Bitcoin is not. This means that on the Ethereum blockchain, one can write smart contracts that can pretty much solve any reasonable computational problem </p>

                <p> Hash Functions: Bitcoin uses the FBI developed hash function of SHA-256, while Ethereum uses its own hash function called Ethash. The main difference between these 2 hash functions is that Ethash is ASIC Resistant. This means that there will be no significant advantage mining on dedicated hardware (ASIC), as compared to a CPU implimentation (regular computer). ASIC-resistant hash functions require a lot of memory, which is hard to implement on a ASIC. ASIC-resistant hash functions level the playing field, allowing regular people to mine profitably. </p>




            </div>
        </div><!-- /.panel-->


    </div>

     <div class="col"></div>
  </div>
    
  </div>  <!--/.main-->
  
  <script src="js/jquery-1.11.1.min.js"></script>
  <script src="js/bootstrap.min.js"></script>
    <script src="js/typeahead.bundle.js"></script>
  <script src="js/custom.js"></script>
    
</body>
</html>